import olefile
import struct
import zlib
import io
import jsbeautifier as jsb

def get_dword(data, offset):
    return struct.unpack("<I", data[offset:offset + 4])[0]
    
def scan_body(ole, stream_name, is_Compressed):
    if ole.exists(stream_name):
        body = ole.openstream(stream_name)
        if is_Compressed:
            body_data = zlib.decompress(body.read(), -15)
        else:
            body_data = body.read()
        
        pos = 0
        while pos < len(body_data):
            record_head = get_dword(body_data, pos)
            pos += 4
            
            size = (record_head & 0xfff00000) >> 20
            level = (record_head & 0x000ffc00) >> 10
            tag = record_head & 0x000003ff
            
            if size == 0xfff:
                size = get_dword(body_data, pos)
                pos += 4
            
            print(f'Pos: {hex(pos-4)} Tag: {hex(tag)} Level: {hex(level)} Size: {hex(size)}')
            
            # 데이터 읽기는 Skip
            if tag == 0x43:
                text_data = body_data[pos:pos+size]
                compressed_data = zlib.compress(text_data)
                compress_rate = 100 - len(compressed_data)/len(text_data)*100
                
                if compress_rate > 98:
                    print(f'Compress Rate: {compress_rate:.2f}%')
                    return False
            
            pos += size
        
        # print("=================================================")
        
        if pos == len(body_data):
        #     print('EOF')
            return True
        else:
        #     print('Not EOF')
            return False

def scan_hwp(filename):

    if olefile.isOleFile(filename):
        with olefile.OleFileIO(filename) as ole:
            for name in ole.listdir():
                name_str = '/'.join(name)
                print(name_str)
            
            if ole.exists('FileHeader'):
                fileheader = ole.openstream('FileHeader')
                t = fileheader.read()
                if t[0:17] == b'HWP Document File':
                    print('HWP File')
                    attr = get_dword(t, 0x24)
                    if attr & 0b000000000000000000000000000000001: # 0x1
                        print('Compressed File')
                        is_compressed = True
                    if attr & 0b000000000000000000000000000000010: # 0x2
                        print('Password Encrypted File')
                        return

                else:
                    print('Not HWP File')
                    return

            if ole.exists('Scripts/JScriptVersion'):
                jscript = ole.openstream('Scripts/JScriptVersion')
                if is_compressed:
                    version = zlib.decompress(jscript.read(), -15)
                else:
                    version = jscript.read()

                print("JScriptVersion:", version)

            if ole.exists('Scripts/DefaultJScript'):
                jscript = ole.openstream('Scripts/DefaultJScript')
                if is_compressed:
                    js_data = zlib.decompress(jscript.read(), -15)
                else:
                    js_data = jscript.read()
                    
                stringio = io.BytesIO(js_data)
                t = get_dword(stringio.read(4), 0x0)
                js1 = stringio.read(t*2).decode('utf-16')
                print("=================================================")
                print(jsb.beautify(js1))
                print("=================================================")
                t = get_dword(stringio.read(4), 0x0)
                js2 = stringio.read(t*2).decode('utf-16')
                print(jsb.beautify(js2))
                print("=================================================")
                
                for name in ole.listdir():
                    if name[0] == 'BodyText':
                        check_eof = scan_body(ole, '/'.join(name), is_compressed)
                        print('/'.join(name), 'EOF' if check_eof else 'Not EOF')
                
                print("=================================================")
                
                scan_body(ole, 'BodyText/Section1', is_compressed)
                
if __name__ == '__main__':
    filename = r'./01.hwp.vir'
    scan_hwp(filename)